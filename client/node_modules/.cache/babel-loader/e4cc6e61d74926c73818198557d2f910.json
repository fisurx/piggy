{"ast":null,"code":"var _jsxFileName = \"/home/fisura/projects/express/react_file_upload/client/src/components/Upload.jsx\";\nimport React, { useState, Fragment } from 'react';\nimport axios from 'axios';\n\nconst Upload = () => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('Choose File');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0]);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const {\n        fileName,\n        filePath\n      } = res.data;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vistaUpload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"You can help on this too.\"), /*#__PURE__*/React.createElement(\"form\", {\n    method: \"POST\",\n    action: \"/upload\",\n    ectype: \"multipart/form-data\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    name: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), uploadedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, uploadedFile.fileName), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })) : null));\n};\n\nexport default Upload;","map":{"version":3,"sources":["/home/fisura/projects/express/react_file_upload/client/src/components/Upload.jsx"],"names":["React","useState","Fragment","axios","Upload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","onChange","e","target","files","onSubmit","preventDefault","formData","FormData","append","res","post","headers","fileName","filePath","data","err","response","status","msg","width"],"mappings":"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","sourcesContent":["import React,{useState, Fragment} from 'react';\nimport axios from 'axios';\n\n\n\nconst Upload = () => {\n    const [file, setFile] = useState('');\n    const [filename, setFilename] = useState('Choose File');\n    const [uploadedFile, setUploadedFile] = useState({});\n    const [message, setMessage] = useState('');\n    \n    const onChange = e =>{\n        setFile(e.target.files[0]);\n        setFilename(e.target.files[0])\n    }\n\n    const onSubmit = async e => {\n        e.preventDefault(); \n        const formData = new FormData();\n        formData.append('file', file);\n    \n        try {\n          const res = await axios.post('/upload', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n    \n          const { fileName, filePath } = res.data;\n    \n          setUploadedFile({ fileName, filePath });\n    \n          setMessage('File Uploaded');\n        } catch (err) {\n          if (err.response.status === 500) {\n            setMessage('There was a problem with the server');\n          } else {\n            setMessage(err.response.data.msg);\n          }\n        }\n      };\n\n\n\n    return (\n      <Fragment>\n        <div className=\"vistaUpload\">\n            <h1>You can help on this too.</h1>\n            <form method=\"POST\" action=\"/upload\" ectype=\"multipart/form-data\" onSubmit={onSubmit}>\n                <input type=\"file\" name=\"file\" onChange={onChange} />\n                 \n      \n\n                <input type=\"submit\" value=\"Upload\" name=\"file\" />\n            </form>\n            {uploadedFile ? (\n              <div>\n                <h3>{uploadedFile.fileName}</h3>\n                <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' ></img> \n              </div>): null}\n        </div>\n      </Fragment>\n    )\n}\n\nexport default Upload\n"]},"metadata":{},"sourceType":"module"}