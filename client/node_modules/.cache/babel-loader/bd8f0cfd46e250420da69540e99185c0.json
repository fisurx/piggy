{"ast":null,"code":"var _jsxFileName = \"/home/fisura/projects/express/ppiggy/client/src/components/Upload.jsx\";\nimport React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\n\nconst Upload = () => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('Choose File');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState(\"\");\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const {\n        fileName,\n        filePath\n      } = res.data;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vistaUpload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"You can help on this too.\"), /*#__PURE__*/React.createElement(\"form\", {\n    method: \"POST\",\n    action: \"/upload\",\n    ectype: \"multipart/form-data\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, filename), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    name: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  })), uploadedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, uploadedFile.fileName), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  })) : null));\n};\n\nexport default Upload;","map":{"version":3,"sources":["/home/fisura/projects/express/ppiggy/client/src/components/Upload.jsx"],"names":["React","Fragment","useState","Message","Progress","axios","Upload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","onChange","e","target","files","name","onSubmit","preventDefault","formData","FormData","append","res","post","headers","fileName","filePath","data","err","response","status","msg","width"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\n\nconst Upload = () => {\n    const [file, setFile] = useState('');\n    const [filename, setFilename] = useState('Choose File');\n    const [uploadedFile, setUploadedFile] = useState({});\n    const [message, setMessage] = useState(\"\");\n\n    const onChange = e => {\n      setFile(e.target.files[0]);\n      setFilename(e.target.files[0].name);\n    };\n  \n    const onSubmit = async e => {\n      e.preventDefault();\n      const formData = new FormData();\n      formData.append('file', file);\n  \n      try {\n        const res = await axios.post('/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n  \n        const { fileName, filePath } = res.data;\n  \n        setUploadedFile({ fileName, filePath });\n  \n      } catch (err) {\n        if (err.response.status === 500) {\n          setMessage('There was a problem with the server');\n        } else {\n          setMessage(err.response.data.msg);\n        }\n      }\n    };\n\n\n\n\n    return (\n        <Fragment>\n        <div className=\"vistaUpload\">\n            <h1>You can help on this too.</h1>\n            <form method=\"POST\" action=\"/upload\" ectype=\"multipart/form-data\" onSubmit={onSubmit}>\n                <input type=\"file\" name=\"file\" onChange={onChange}/>\n                <label className='custom-file-label' htmlFor='customFile'>\n                    {filename}\n                </label>\n                <input type=\"submit\" value=\"Upload\" name=\"file\" />\n            </form>\n            \n            {uploadedFile ? (\n                <div>\n                    <h3 className='text-center'>{uploadedFile.fileName}</h3>\n                    <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\n                </div>\n                  \n            ) : null}\n        </div>\n        </Fragment>\n    )\n}\n\nexport default Upload;\n"]},"metadata":{},"sourceType":"module"}