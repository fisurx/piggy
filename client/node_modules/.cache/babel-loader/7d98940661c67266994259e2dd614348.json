{"ast":null,"code":"var _jsxFileName = \"/home/fisura/projects/express/react_file_upload/client/src/components/Upload.jsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst Upload = () => {\n  const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('Choose File');\n  const [uploadedFile, setUploadedFile] = useState({});\n  const [message, setMessage] = useState('');\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFilename(e.target.files[0]);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPercentage(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total))); // Clear percentage\n\n          setTimeout(() => setUploadPercentage(0), 10000);\n        }\n      });\n      const {\n        fileName,\n        filePath\n      } = res.data;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n      setMessage('File Uploaded');\n    } catch (err) {\n      if (err.response.status === 500) {\n        setMessage('There was a problem with the server');\n      } else {\n        setMessage(err.response.data.msg);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vistaUpload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"You can help on this too.\"), /*#__PURE__*/React.createElement(\"form\", {\n    method: \"POST\",\n    action: \"/upload\",\n    ectype: \"multipart/form-data\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    name: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Upload;","map":{"version":3,"sources":["/home/fisura/projects/express/react_file_upload/client/src/components/Upload.jsx"],"names":["React","useState","axios","Upload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","onChange","e","target","files","onSubmit","preventDefault","formData","FormData","append","res","post","headers","onUploadProgress","progressEvent","setUploadPercentage","parseInt","Math","round","loaded","total","setTimeout","fileName","filePath","data","err","response","status","msg"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport axios from 'axios';\n\n\n\nconst Upload = () => {\n    const [file, setFile] = useState('');\n    const [filename, setFilename] = useState('Choose File');\n    const [uploadedFile, setUploadedFile] = useState({});\n    const [message, setMessage] = useState('');\n    \n    const onChange = e =>{\n        setFile(e.target.files[0]);\n        setFilename(e.target.files[0])\n    }\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('file', file);\n    \n        try {\n          const res = await axios.post('/upload', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            },\n            onUploadProgress: progressEvent => {\n              setUploadPercentage(\n                parseInt(\n                  Math.round((progressEvent.loaded * 100) / progressEvent.total)\n                )\n              );\n    \n              // Clear percentage\n              setTimeout(() => setUploadPercentage(0), 10000);\n            }\n          });\n    \n          const { fileName, filePath } = res.data;\n    \n          setUploadedFile({ fileName, filePath });\n    \n          setMessage('File Uploaded');\n        } catch (err) {\n          if (err.response.status === 500) {\n            setMessage('There was a problem with the server');\n          } else {\n            setMessage(err.response.data.msg);\n          }\n        }\n      };\n\n\n\n    return (\n        <div className=\"vistaUpload\">\n            <h1>You can help on this too.</h1>\n            <form method=\"POST\" action=\"/upload\" ectype=\"multipart/form-data\" onSubmit={onSubmit}>\n                <input type=\"file\" name=\"file\" onChange={onChange} />\n                 \n      \n\n                <input type=\"submit\" value=\"Upload\" name=\"file\" />\n            </form>\n        </div>\n    )\n}\n\nexport default Upload\n"]},"metadata":{},"sourceType":"module"}